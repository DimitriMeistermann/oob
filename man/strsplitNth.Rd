% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{strsplitNth}
\alias{strsplitNth}
\title{String split with chosen returned element}
\usage{
strsplitNth(x, split, n = 1, fixed = FALSE, perl = FALSE, useBytes = FALSE)
}
\arguments{
\item{x}{character vector, each element of which is to be split. Other inputs, including a factor, will give an error.}

\item{split}{character vector (or object which can be coerced to such) containing regular expression(s) (unless fixed = TRUE) to use for splitting. If empty matches occur, in particular if split has length 0, x is split into single characters. If split has length greater than 1, it is re-cycled along x.}

\item{n}{Single integer, the element index to be returned}

\item{fixed}{logical. If TRUE match split exactly, otherwise use regular expressions. Has priority over perl.}

\item{perl}{logical. Should Perl-compatible regexps be used?}

\item{useBytes}{logical. If TRUE the matching is done byte-by-byte rather than character-by-character, and inputs with marked encodings are not converted. This is forced (with a warning) if any input is found which is marked as "bytes" (see Encoding).}
}
\value{
A vector of the same length than x, with the n-th element for the split of each value.
}
\description{
String split with chosen returned element
}
\examples{
strsplitNth(c("ax1","bx2"), "x",1)
strsplitNth(c("ax1","bx2"), "x",2)
}
