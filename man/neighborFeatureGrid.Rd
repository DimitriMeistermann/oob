% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{neighborFeatureGrid}
\alias{neighborFeatureGrid}
\title{Project features linked to a projection from each point on a grid}
\usage{
neighborFeatureGrid(
  proj,
  featureMat,
  method = c("aurocFC", "auroc", "FC"),
  grid = NULL,
  transpose = TRUE,
  returnGraph = FALSE,
  returnGrid = FALSE,
  returnPseudoSamples = FALSE,
  fontSizeRange = c(2, 4),
  fontface = "bold.italic",
  geomTextFun = shadowtext::geom_shadowtext,
  ...
)
}
\arguments{
\item{proj}{Matrix or dataframe containing at least two vectors of numeric corresponding to the x/y coordinates.}

\item{featureMat}{A matrix with row as features (if `transpose`).}

\item{method}{Method for computing the feature specificity score. Can be `"aurocFC"`,  (auric * fold-change), `"auroc"` or `"FC"` (Fold-change).}

\item{grid}{A dataframe returned by this function if `returnGrid`. Contains data for plotting the grid (see `returnGrid` for more explanations)}

\item{transpose}{Logical. If `transpose`, samples are columns and features are rows.}

\item{returnGraph}{Logical. Return the graph as a ggplot object instead of printing it.}

\item{returnGrid}{Return a dataframe instead of plotting, corresponding to the coordinate of the grid,
Contains the following columns: `X` and `Y` (coordinates), `nContrib` (number of contributing observation to the grid point, the grid point is not created if `nContrib==0`),
`best` (best feature of the grid point), `score` (specificity score of the best feature), `sizeScore` (score weighted by number of observations, will determine the fontsize).}

\item{returnPseudoSamples}{Return the pseudo sam}

\item{fontSizeRange}{Vector of two numerics. Miniumum and maximum of the displayed features fontsize.}

\item{fontface}{Font face of the displayed features.}

\item{...}{Arguments passed to proj2d.}
}
\value{
Plot in the current graphical device or a ggplot object if `returnGraph=TRUE`.
}
\description{
Project features linked to a projection from each point on a grid
}
\details{
Project the dataset onto a 2D plane using a suitable algorithm (e.g., PCA or t-SNE).
Create a grid of points with the specified grid_size.
For each point on the grid, find its neighborhood by looking at the points in the dataset that are closest to it.
For each feature in feature_names, calculate the specificity of that feature in the neighborhood of the grid point. This could be done using a metric such as the average distance between points that have that feature and points that do not have that feature.
Display the feature name with the highest specificity for each grid point.
}
\examples{
data(iris)
qDataIris<-t(iris[,1:4])
irisUMAP<-UMAP(qDataIris)
neighborFeatureGrid(irisUMAP,qDataIris)

grid<-neighborFeatureGrid(irisUMAP,qDataIris, returnGrid=TRUE)

}
