% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/countMatrix.R
\name{computeQCmetricSamples}
\alias{computeQCmetricSamples}
\title{Give QC metrics per sample}
\usage{
computeQCmetricSamples(x, uncenter = FALSE, sce_assay = 1)
}
\arguments{
\item{x}{A matrix of numeric with samples as columns.
Can also be a \code{SummarizedExperiment} or \code{SingleCellExperiment} object.}

\item{uncenter}{uncenter the matrix first so the minimum is 0.}

\item{sce_assay}{Integer or character, if \code{data} is a \code{SummarizedExperiment}
related object, the assay name to use.}
}
\value{
A data frame with each row as a sample and the following columns:
\itemize{
\item \code{mean}: average expression in the sample
\item \code{sd}: standard deviation
\item \code{TotalGenEx}: number of expressed gene (count>0) in the sample
\item \code{TotalCount}: sum of counts for the sample
}

If \code{x} is a \code{SummarizedExperiment} related object, the function will
add the columns to the \code{colData} slot.
}
\description{
Give QC metrics per sample
}
\examples{
data("geneLengthGRCh38")
countMat <-
    sapply(vector("numeric", length = length(geneLengthGRCh38)),
        function(x) {
            MASS::rnegbin(10, theta = abs(rnorm(1, mean = 10, sd = 20)),
            mu = abs(rnorm(1, mean = 10, sd = 20)))
    }) |> t()
rownames(countMat) <- names(geneLengthGRCh38)
colnames(countMat) <- letters[seq_len(ncol(countMat))]
computeQCmetricSamples(countMat)
sce <- SingleCellExperiment(assays = list(counts = countMat))
sce <- computeQCmetricSamples(sce)
colData(sce) |> head()
}
