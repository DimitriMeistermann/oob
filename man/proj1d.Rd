% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{proj1d}
\alias{proj1d}
\title{Plot a 1D projection.}
\usage{
proj1d(
  variable,
  colorBy = NULL,
  pointSize = 3,
  plotText = FALSE,
  main = NULL,
  alpha = 9/10,
  ellipse = FALSE,
  emph = NULL,
  colorScale = NULL,
  returnGraph = FALSE,
  legendTitle = "Values",
  variable.name = "x",
  na.color = "grey50",
  na.bg = TRUE,
  plotFactorsCentroids = FALSE,
  pointStroke = 1/8,
  strokeColor = "black",
  funAutoColorScale = oobColors,
  plotLabelRepel = FALSE,
  labelSize = 3,
  sizeProp2Dens = FALSE,
  densEps = 1
)
}
\arguments{
\item{variable}{Numeric vector. X coordinates.}

\item{colorBy}{A vector of factor or numeric same size as number of samples in PCA. Color each point on the projection by its corresponding value.}

\item{pointSize}{Single numeric. Size of points.}

\item{plotText}{Logical. Plot sample names instead of points.}

\item{main}{Single character. Main title of the graph.}

\item{alpha}{Single numeric (from 0 to 1). Opacity of the points.}

\item{ellipse}{Logical. Add stat_ellipse to the projection (eventually several ellipses if colorBy is a factor).}

\item{emph}{Single character or \code{NULL}. Must be a level of \code{colorBy} if it is a factor. Emphasize a particular value on the plot.}

\item{colorScale}{A vector of colors. Equal to the desired number of breaks for continuous values or number of levels for factors.}

\item{returnGraph}{Logical. Return the graph as a ggplot object instead of printing it.}

\item{legendTitle}{Character. The legend title on the plot.}

\item{variable.name}{Single characters. Axis name showed on the plot.}

\item{na.color}{Character. Color of NA values if \code{ColorBy} is provided.}

\item{na.bg}{Logical. Put the NA points behind the others in term of layers.}

\item{plotFactorsCentroids}{Logical. If \code{ColorBy} is a factor Display the name of the factor at the centroid of its points.}

\item{pointStroke}{Numeric. Width of points border.}

\item{strokeColor}{Character. Color of points border.}

\item{funAutoColorScale}{A function that return n colors with n as a first argument. Responsible for color mapping of the levels.}

\item{plotLabelRepel}{Logical. Plot the rownames of the coordinates as a ggrepel label of each point.}

\item{labelSize}{Numeric. Size of the labels if \code{plotLabelRepel=TRUE}.}

\item{sizeProp2Dens}{Logical. Size of point is inversely proportional to the density of its area.}

\item{densEps}{Numeric. Radius of the eps-neighborhood, i.e., bandwidth of the uniform kernel). Used if \code{sizeProp2Dens=TRUE}.}
}
\value{
Plot in the current graphical device or a ggplot object if \code{returnGraph=TRUE}.
}
\description{
Plot a 1D projection.
}
\examples{
data(iris)

proj1d(iris$Sepal.Length)

proj1d(iris$Sepal.Length,colorBy=iris$Species)

proj1d(iris$Sepal.Length,pointSize = .1)
proj1d(iris$Sepal.Length,variable.name = "Length of sepal" ,main = "Two features from iris")


proj1d(iris$Sepal.Length,colorBy = iris$Species,plotFactorsCentroids = TRUE,legendTitle = "Species")
proj1d(iris$Sepal.Length,colorBy = iris$Species,pointStroke = 3,strokeColor = "grey")

proj1d(iris$Sepal.Length,colorBy = iris$Species,emph = "setosa",na.color = "white")
proj1d(iris$Sepal.Length,colorBy = iris$Species,returnGraph = TRUE)+
    ggplot2::geom_vline(xintercept = 6)

proj1d(iris$Sepal.Length,colorBy = iris$Species,colorScale = c("blue","white","red"))
proj1d(iris$Sepal.Length,colorBy = iris$Species,funAutoColorScale = mostDistantColor)
proj1d(iris$Sepal.Length,colorBy = iris$Petal.Length,legendTitle = "Petal.Length",colorScale = c("blue","white","red"))

proj1d(iris$Sepal.Length,plotLabelRepel = TRUE)
proj1d(iris$Sepal.Length,sizeProp2Dens = TRUE)
proj1d(iris$Sepal.Length,sizeProp2Dens = TRUE,densEps = 2)
}
